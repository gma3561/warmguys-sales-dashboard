const { createClient } = require('@supabase/supabase-js');

// HTMLÏóêÏÑú Í∞ÄÏ†∏Ïò® Ïã§Ï†ú Supabase ÏÑ§Ï†ï
const supabaseUrl = 'https://ooqexropurnslqmcbjqk.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9vcWV4cm9wdXJuc2xxbWNianFrIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDc0NzQyMDUsImV4cCI6MjA2MzA1MDIwNX0.yXVabtxZwX3QFF6xnjmj5VI2Lrp_7fZ3HvS5dCalbuA';
const supabase = createClient(supabaseUrl, supabaseKey);

async function checkAllTables() {
    console.log('üîç Apps ScriptÏóêÏÑú ÏÇ¨Ïö©ÌïòÎäî ÌÖåÏù¥Î∏î ÌôïÏù∏ Ï§ë...\n');
    
    // Apps ScriptÏóêÏÑú ÏÇ¨Ïö©ÌïòÎäî ÌÖåÏù¥Î∏îÎì§
    const appsScriptTables = [
        'apgujeong_apgujung_sales',  // ÏïïÍµ¨Ï†ïÍ≥±Ï∞Ω ÏïïÍµ¨Ï†ïÏ†ê
        'apgujeong_garosu_sales',    // ÏïïÍµ¨Ï†ïÍ≥±Ï∞Ω Í∞ÄÎ°úÏàòÏ†ê
        'mrs_sales',                  // Ïó†ÏïåÏóêÏä§
        'apgujeong_sales',           // Í∏∞Ï°¥ ÌÖåÏù¥Î∏î
        'warmguys_sales'             // Í∏∞Ï°¥ ÌÖåÏù¥Î∏î
    ];
    
    for (const tableName of appsScriptTables) {
        console.log(`\nüìä ${tableName} ÌÖåÏù¥Î∏î ÌôïÏù∏:`);
        
        try {
            // ÌÖåÏù¥Î∏î Ï°¥Ïû¨ ÌôïÏù∏ Î∞è Îç∞Ïù¥ÌÑ∞ Ï°∞Ìöå
            const { data, error } = await supabase
                .from(tableName)
                .select('*')
                .order('date', { ascending: false })
                .limit(5);
                
            if (error) {
                console.log(`‚ùå ÌÖåÏù¥Î∏î ÏóÜÏùå ÎòêÎäî Ïò§Î•ò: ${error.message}`);
                continue;
            }
            
            console.log(`‚úÖ ÌÖåÏù¥Î∏î Ï°¥Ïû¨ - ${data.length}Í∞ú Î†àÏΩîÎìú Ï°∞ÌöåÎê®`);
            
            if (data.length > 0) {
                // Ïª¨Îüº ÌôïÏù∏
                console.log(`   Ïª¨Îüº: ${Object.keys(data[0]).join(', ')}`);
                
                // ÏµúÏã† Îç∞Ïù¥ÌÑ∞ ÌôïÏù∏
                console.log(`   ÏµúÏã† Îç∞Ïù¥ÌÑ∞:`);
                data.forEach(row => {
                    if (tableName.includes('apgujeong')) {
                        console.log(`     ${row.date}: Ï¥ùÎß§Ï∂ú ${row.total_sales?.toLocaleString()}Ïõê, Í≥†Í∞ùÏàò ${row.customer_count}Î™Ö`);
                    } else if (tableName === 'mrs_sales') {
                        console.log(`     ${row.date}: Ï¥ùÎß§Ï∂ú ${row.total_sales?.toLocaleString()}Ïõê`);
                    } else {
                        console.log(`     ${row.date}: ${JSON.stringify(row).substring(0, 100)}...`);
                    }
                });
                
                // Ï†ÑÏ≤¥ Îç∞Ïù¥ÌÑ∞ Ïàò ÌôïÏù∏
                const { count } = await supabase
                    .from(tableName)
                    .select('*', { count: 'exact', head: true });
                    
                console.log(`   Ï†ÑÏ≤¥ Î†àÏΩîÎìú Ïàò: ${count}Í∞ú`);
                
                // ÎÇ†Ïßú Î≤îÏúÑ ÌôïÏù∏
                const { data: dateRange } = await supabase
                    .from(tableName)
                    .select('date')
                    .order('date', { ascending: true })
                    .limit(1);
                    
                const { data: latestDate } = await supabase
                    .from(tableName)
                    .select('date')
                    .order('date', { ascending: false })
                    .limit(1);
                    
                if (dateRange && dateRange[0] && latestDate && latestDate[0]) {
                    console.log(`   ÎÇ†Ïßú Î≤îÏúÑ: ${dateRange[0].date} ~ ${latestDate[0].date}`);
                }
            }
            
        } catch (err) {
            console.log(`‚ùå ÏòàÏô∏ Î∞úÏÉù: ${err.message}`);
        }
    }
    
    // ÏïïÍµ¨Ï†ïÏ†ê 6Ïõî Îç∞Ïù¥ÌÑ∞ ÌäπÎ≥Ñ ÌôïÏù∏
    console.log('\n\nüîç ÏïïÍµ¨Ï†ïÏ†ê 2025ÎÖÑ 6Ïõî Îç∞Ïù¥ÌÑ∞ ÌôïÏù∏:');
    
    for (const tableName of ['apgujeong_apgujung_sales', 'apgujeong_garosu_sales']) {
        console.log(`\n${tableName}:`);
        
        try {
            const { data: juneData, error } = await supabase
                .from(tableName)
                .select('*')
                .gte('date', '2025-06-01')
                .lte('date', '2025-06-30')
                .order('date', { ascending: true });
                
            if (!error && juneData) {
                console.log(`  6Ïõî Îç∞Ïù¥ÌÑ∞: ${juneData.length}Í∞ú`);
                if (juneData.length > 0) {
                    console.log(`  Ï≤´ 3Í∞ú Îç∞Ïù¥ÌÑ∞:`);
                    juneData.slice(0, 3).forEach(row => {
                        console.log(`    ${row.date}: ${row.total_sales?.toLocaleString()}Ïõê`);
                    });
                }
            }
        } catch (err) {
            console.log(`  Ïò§Î•ò: ${err.message}`);
        }
    }
}

checkAllTables(); 